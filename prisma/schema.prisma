// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}
enum Role {
  ADMIN
  USER
}
enum Category {
  GENERAL
  SPORTS
  HISTORY
  GEOGRAPHY
  ENTERTAINMENT
  SCIENCE
  ART
  MUSIC
  FILM
  LITERATURE
  MATHS
  TECHNOLOGY
  ANIMALS
  VEHICLES
  FOOD
  NATURE
  TRAVEL
  POLITICS
  RELIGION
  CELEBRITIES
  COMICS
  GAMES
  ANIME
  CARTOONS
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  role          Role      @default(USER)
  cheatUsed     Boolean   @default(false)
  cheatUsedAt   DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  totalScore    Int       @default(0)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Questions {
  id            String    @id @default(cuid())
  description   String
  category      Category  
  stale         Boolean   @default(false)
  answer1       String
  answer2       String
  answer3       String
  answer4       String
  correctAnswer String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  dateDue       DateTime
  image         String
}